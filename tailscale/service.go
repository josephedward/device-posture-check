package tailscale

import (
	"flag"
	"fmt"
	"html"
	"log"
	"net/http"
	"strings"

	"tailscale.com/tsnet"

	// "html/template"
	// "log"
	// "net/http"
	// "github.com/dennwc/dom"
	// "honnef.co/go/js/dom"
	// "syscall/js"
	"github.com/robertkrimen/otto"
	// "tailscale.com/client/tailscale"
	// "crypto/tls"
	// "io"
	// "os/exec"
)

var (
	hostname = flag.String("hostname", "hello", "hostname for the tailnet")
)

func CreateService(statusQuery, tsIp string) {

	s := &tsnet.Server{
		Hostname: *hostname,
	}

	defer s.Close()

	ln, err := s.Listen("tcp", ":80")
	if err != nil {
		log.Fatal(err)
	}

	defer ln.Close()

	lc, err := s.LocalClient()
	if err != nil {
		log.Fatal(err)
	}

	vm := otto.New()

	vm.Set("sayHello", func(call otto.FunctionCall) otto.Value {
		fmt.Printf("Hello, %s.\n", call.Argument(0).String())
		return otto.Value{}
	})

	// log.Fatal(
	http.Serve(ln, http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		who, err := lc.WhoIs(r.Context(), r.RemoteAddr)
		if err != nil {
			http.Error(w, err.Error(), 500)
			return
		}
		//print username
		fmt.Fprintf(w, "<p>Username: %s</p>", html.EscapeString(who.UserProfile.LoginName))
		fmt.Fprintf(w, "<p>Report for TS NODE @ IP ADDRESS : %s</p>", html.EscapeString(tsIp))
		fmt.Fprintf(w, "<p>Query Results: %s</p>", strings.ReplaceAll(statusQuery, ",", ",<br>"))
		fmt.Fprintln(w, `<button onClick={

			var myHeaders = new Headers();
myHeaders.append("Authorization", "Basic dHNrZXktYXBpLWs1dTlUNjRDTlRSTC1xNXl4UGt4c2hTUFB2RzduNk5EblRQRlF6WHdnNlFxdGI6");
myHeaders.append("Content-Type", "text/plain");

var raw = "{\"authorized\": true}";

var requestOptions = {
  method: 'POST',
  headers: myHeaders,
  body: raw,
  redirect: 'follow'
};

fetch("https://api.tailscale.com/api/v2/device/61777298839132353/authorized", requestOptions)
  .then(response => response.text())
  .then(result => console.log(result))
  .catch(error => console.log('error', error));
		}>test button </button>`)

	}))

}

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

//  curl 'https://api.tailscale.com/api/v2/tailnet/josephedward.github/devices' \
//   -u "tskey-api-k5u9T64CNTRL-q5yxPkxshSPPvG7n6NDnTPFQzXwg6Qqtb"

// req, err := http.NewRequest("GET", "https://api.tailscale.com/api/v2/tailnet/josephedward.github/devices", nil)
// if err != nil {
// 	// handle err
// }
// req.SetBasicAuth("tskey-api-k5u9T64CNTRL-q5yxPkxshSPPvG7n6NDnTPFQzXwg6Qqtb", "<PASSWORD>")

// resp, err := http.DefaultClient.Do(req)
// if err != nil {
// 	// handle err
// }
// defer resp.Body.Close()
